import cv2 as cv
import random
import sqlite3
import tkinter as tk
from tkinter import messagebox

ordered_item_list = []

# Function to display the menu and process the order
def Mcdonals_ordering_system():
    menu = cv.imread("menu.jpg")  # Add your file_path
    menu_ = cv.resize(menu, (800, 700))

    cv.imshow("menu", menu_)
    cv.waitKey(0)

    # Menu options
    dic = {
        "chicken": {
            1: "MCCHICKEN [400 Calories]",
            2: "FILET-O-FISH [380 Calories]",
            3: "CRISPY CHICKEN SANDWICH [470 Calories]",
            4: "SPICY CRISPY CHICKEN [530 Calories]",
            5: "DELUXE CRISPY CHICKEN [530 Calories]",
            6: "DELUXE SPICY CRISPY CHICKEN [540 Calories]"
        },
        "FRIES": {
            7: "SMALL FRIES [220 Calories]",
            8: "MEDIUM FRIES [320 Calories]",
            9: "LARGE FRIES [490 Calories]"
        },
        "MCNUGGETS": {
            10: "4PC. CHICKEN MCNUGGETS [170 Calories]",
            11: "6 PC. CHICKEN MCNUGGETS [250 Calories]",
            12: "10 PC. CHICKEN MCNUGGETS [420 Calories]"
        }
    }

    while True:
        place_order = input("Enter your order from given menu [chicken, fries, mcnuggets]: ")

        if place_order == "chicken":
            order_chicken(dic["chicken"])
        elif place_order == "fries":
            order_fries(dic["FRIES"])
        elif place_order == "mcnuggets":
            order_mcnuggets(dic["MCNUGGETS"])
        else:
            print("Error: Choose from the given options.")

        reorder = input("Do you want to order more? [y/n]: ")
        if reorder == "n":
            break

    # Calculate total bill
    print_order_summary()
    apply_discount_and_checkout()

# Function to order chicken
def order_chicken(chicken_menu):
    while True:
        for i in chicken_menu.values():
            print(i)
        item = int(input("Enter your item number: "))
        if item in chicken_menu:
            quantity = int(input("Enter quantity: "))
            total_price = calculate_price(item, quantity)
            ordered_item_list.append([chicken_menu[item], total_price, quantity])
        exit_order = input("Enter 'e' to exit or 'n' to continue ordering: ")
        if exit_order == "e":
            break

# Function to order fries
def order_fries(fries_menu):
    while True:
        for i in fries_menu.values():
            print(i)
        item = int(input("Enter your item number: "))
        if item in fries_menu:
            quantity = int(input("Enter quantity: "))
            total_price = calculate_price(item, quantity)
            ordered_item_list.append([fries_menu[item], total_price, quantity])
        exit_order = input("Enter 'e' to exit or 'n' to continue ordering: ")
        if exit_order == "e":
            break

# Function to order mcnuggets
def order_mcnuggets(mcnuggets_menu):
    while True:
        for i in mcnuggets_menu.values():
            print(i)
        item = int(input("Enter your item number: "))
        if item in mcnuggets_menu:
            quantity = int(input("Enter quantity: "))
            total_price = calculate_price(item, quantity)
            ordered_item_list.append([mcnuggets_menu[item], total_price, quantity])
        exit_order = input("Enter 'e' to exit or 'n' to continue ordering: ")
        if exit_order == "e":
            break

# Function to calculate price based on item and quantity
def calculate_price(item, quantity):
    price_list = {1: 100, 2: 170, 3: 200, 4: 350, 5: 440, 6: 560, 7: 50, 8: 150, 9: 250, 10: 100, 11: 200, 12: 400}
    return price_list.get(item, 0) * quantity

# Function to print the order summary
def print_order_summary():
    print("\nYour Order Summary:")
    for index, item in enumerate(ordered_item_list):
        print(f"{index + 1}: {item[0]} - Quantity: {item[2]} - Total: {item[1]}")

# Function to apply discount and print the final total
def apply_discount_and_checkout():
    total = sum(item[1] for item in ordered_item_list)
    discount = 0
    discount_code = input("Enter discount code (if any): ")
    if discount_code == "DISCOUNT10":
        discount = total * 0.10
        total -= discount

    gst = total * 0.18
    grand_total = total + gst

    print(f"\nSubtotal: {total}")
    print(f"GST (18%): {gst}")
    print(f"Discount: {discount}")
    print(f"Grand Total: {grand_total}")

    save_order_to_db()

# Function to save the order to a database
def save_order_to_db():
    conn = sqlite3.connect('orders.db')
    cursor = conn.cursor()
    cursor.execute("CREATE TABLE IF NOT EXISTS orders (id INTEGER PRIMARY KEY, item_name TEXT, quantity INTEGER, total REAL)")
    
    for item in ordered_item_list:
        cursor.execute("INSERT INTO orders (item_name, quantity, total) VALUES (?, ?, ?)",
                       (item[0], item[2], item[1]))
    conn.commit()
    conn.close()

# GUI to display menu using Tkinter
def show_gui_menu():
    window = tk.Tk()
    window.title("McDonald's Menu")

    tk.Label(window, text="MCCHICKEN [400 Calories]").pack()
    tk.Button(window, text="Order", command=lambda: add_to_order("MCCHICKEN")).pack()
    tk.Label(window, text="FILET-O-FISH [380 Calories]").pack()
    tk.Button(window, text="Order", command=lambda: add_to_order("FILET-O-FISH")).pack()

    # More items...

    tk.Button(window, text="Checkout", command=checkout).pack()
    window.mainloop()

def add_to_order(item):
    print(f"Added {item} to order.")

def checkout():
    print("Proceed to checkout.")

# Main function call
Mcdonals_ordering_system()
